name: Build/release

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 22

      - name: Install Miniconda (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
          bash miniconda.sh -b -p $HOME/miniconda
          source $HOME/miniconda/etc/profile.d/conda.sh
          conda init bash
          conda create -p ./python_env python=3.11
          conda activate ./python_env
          conda install -y flask pillow

          - name: Install Miniconda (Ubuntu & macOS)
          if: matrix.os == 'macos-latest'
          run: |
            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh -O miniconda.sh
            bash miniconda.sh -b -p $HOME/miniconda
            source $HOME/miniconda/etc/profile.d/conda.sh
            conda init bash
            conda create -p ./python_env python=3.11
            conda activate ./python_env
            conda install -y flask pillow

      - name: Install Miniconda (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          curl -lO https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe
          Start-Process -Wait -FilePath .\Miniconda3-latest-Windows-x86_64.exe -ArgumentList '/S', '/D=C:\Miniconda3'
          & C:\Miniconda3\Scripts\conda.exe init powershell
          & C:\Miniconda3\Scripts\conda.exe create -p ./python_env python=3.11
          & C:\Miniconda3\Scripts\conda.exe activate ./python_env
          & C:\Miniconda3\Scripts\conda.exe install -y flask pillow

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.gh_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}